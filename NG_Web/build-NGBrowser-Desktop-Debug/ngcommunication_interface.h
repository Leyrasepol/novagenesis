/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p ngcommunication_interface.h: ../NGBrowser/ngcommunication.xml
 *
 * qdbusxml2cpp is Copyright (C) 2016 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef NGCOMMUNICATION_INTERFACE_H
#define NGCOMMUNICATION_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface NGManager.Communication
 */
class NGManagerCommunicationInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "NGManager.Communication"; }

public:
    NGManagerCommunicationInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~NGManagerCommunicationInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> SearchByLiteral(const QString &jLiteral)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(jLiteral);
        return asyncCallWithArgumentList(QStringLiteral("SearchByLiteral"), argumentList);
    }

    inline QDBusPendingReply<bool> SearchByMurmur(const QString &jLiteral)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(jLiteral);
        return asyncCallWithArgumentList(QStringLiteral("SearchByMurmur"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace NGManager {
  typedef ::NGManagerCommunicationInterface Communication;
}
#endif
